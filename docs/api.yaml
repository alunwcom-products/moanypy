openapi: 3.0.1
info:
  title: moany-api
  description: 'Existing moany-public API (but with JWT included for authentication).'
  version: 1.0.0
servers: []
paths:
  /transaction/{id}:
    parameters:
      - name: id
        in: path
        description: 'Transaction identifier.'
        required: true
        schema:
          type: string
    put:
      tags:
      - transactions
      security:
        - bearerJWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionInput'
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionOutput'

    get:
      tags:
      - transactions
      security:
        - bearerJWTAuth: []
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: 'The number of items to skip before starting to collect the result set.'
        - in: query
          name: limit
          schema:
            type: integer
          description: 'The numbers of items to return.'
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionList'
    delete:
      tags:
      - transactions
      security:
        - bearerJWTAuth: []
      responses:
        200:
          description: ""
          content: {}





components:
  securitySchemes:
    bearerJWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    TransactionInput:
      type: object
      description: 'Transaction properties for manual input.'
      properties:
        transactionDate:
          type: string
          format: date-time
          description: 'Transaction date (as shown on bank statement).'
        type:
          type: string
          description: 'Transaction type (as shown on bank statement).'
        description:
          type: string
          description: 'Transaction description (as shown on bank statement).'
        netAmount:
          type: integer
          format: int64
          description: 'Transaction amount (credit/debit).'
        account:
          type: string
          description: 'Account identifier.'
      required:
        - transactionDate
        - netAmount
        - account
    TransactionOutput:
      type: object
      description: 'Transaction properties from data store.'
      properties:
        id:
          type: string
          format: uuid
          description: 'Transaction identifier (UUID).'
        transactionDate:
          type: string
          format: date-time
          description: 'Transaction date (as shown on bank statement).'
        entryDate:
          type: string
          format: date-time
          description: 'Date of entry to data store.'
        type:
          type: string
          description: 'Transaction type (as shown on bank statement).'
        description:
          type: string
          description: 'Transaction description (as shown on bank statement).'
        sourceType:
          type: string
          enum:
          - statement
          - budgeting
          - manual
          description: 'Source of transaction entry.'
        sourceName:
          type: string
          description: 'Name of entry source (e.g. statement file/reference).'
        sourceRow:
          type: integer
          format: int64
          description: 'Source row (for entries from statement files).'
        statementAmount:
          type: integer
          format: int64
          description: 'Transaction amount (as shown on bank statement).'
        netAmount:
          type: integer
          format: int64
          description: 'Transaction amount (credit/debit).'
        statementBalance:
          type: integer
          format: int64
          description: 'Running balance (as shown on bank statement).'
        accountBalance:
          type: integer
          format: int64
          description: 'Calculated running account balance.'
        account:
          type: string
          description: 'Account identifier.'
      required:
        - id
        - transactionDate
        - entryDate
        - sourceType
        - netAmount
        - accountBalance
        - account
    TransactionList:
      type: object
      description: 'Transaction properties from data store.'
      properties:
        count:
          type: integer
          format: int32
        resultsPerPage:
          type: integer
          format: int32
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionOutput'
